{"version":3,"sources":["store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","actions/productActions.js","components/message.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/loader.js","components/Paginate.js","components/Rating.js","components/Product.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","screens/AboutScreen.js","App.js","reportWebVitals.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","userList","users","userDelete","userUpdate","productDelete","productCreate","productUpdate","orderList","orderDeliver","productReviewCreate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","userActions_getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","productActions_list","keyword","pageNumber","productActions_details","Message","variant","children","Alert","defaultProps","SearchBox","useState","setKeyword","useDispatch","useSelector","useEffect","document","body","addEventListener","trim","Form","InputGroup","Control","autoComplete","value","onChange","e","target","placeholder","className","style","position","zIndex","backgroundColor","minWidth","padding","borderRadius","paddingTop","paddingBottom","marginTop","to","_id","Image","src","image","name","Header","Navbar","expand","collapseOnSelect","Container","Brand","Nav","NavDropdown","marginRight","title","split","Item","onClick","removeItem","window","location","assign","Link","fontSize","Toggle","aria-controls","Collapse","classNameName","isAdmin","render","history","Footer","Row","Col","ListGroup","color","marginBottom","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","Rating","text","Product","Card","Img","Body","Title","Text","as","rating","numReviews","category","price","HomeScreen","match","params","fluid","alt","paddingLeft","paddingRight","textAlign","currProduct","xs","sm","md","lg","float","ProductScreen","qty","setQty","setRating","comment","setComment","errorProductReview","successProductReview","alert","ListGroupItem","description","varients","countInStock","Button","disabled","push","length","review","createdAt","substring","onSubmit","productId","preventDefault","post","Group","controlId","Label","row","cartActions_add","setItem","stringify","CartScreen","search","Number","removeFromCartHandler","cartActions_remove","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","userActions_login","FormGroup","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userActions_register","ProfileScreen","loadingOrders","errorOrders","put","userActions_updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","postalCode","setPostalCode","city","setCity","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","disable","orderActions_createOrder","OrderScreen","sdkReady","setSdkReady","orderId","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","appendChild","paypal","href","amount","onSuccess","paymentResult","orderActions_payOrder","orderActions_deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","userActions_deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","userActions_updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","productActions_delete","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","header","console","productActions_update","File","custom","OrderListScreen","AboutScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.44d68068.chunk.js","sourcesContent":["//redux store for managing/handling/updating the global state of app\r\n\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  productDetailsReducer,\r\n  productListReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n} from './reducers/productReducers';\r\nimport {\r\n  userDeleteReducer,\r\n  userDetailsReducer,\r\n  userListReducer,\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateProfileReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport {\r\n  orderCreateReducer,\r\n  orderDeliverReducer,\r\n  orderDetailsReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderPayReducer,\r\n} from './reducers/orderReducers';\r\n\r\n//combines the reducers in the store\r\nconst reducer = combineReducers({\r\n  // productList & productDetails as the global state\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  orderList: orderListReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : [];\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\n//keeping all the middlewares in one array 'middleware'\r\nconst middleware = [thunk];\r\n//creating a store in reducers, initialState and middleware array\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","// product-Reducers for updating the product (global) state by\r\n// taking product-actions and initial state\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case 'PRODUCT_LIST_REQUEST':\r\n      return { loading: true, products: [] };\r\n    //products already loaded\r\n    case 'PRODUCT_LIST_SUCCESS':\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      };\r\n    case 'PRODUCT_LIST_FAIL':\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case 'PRODUCT_DETAILS_REQUEST':\r\n      return { loading: true, ...state };\r\n    //products already loaded\r\n    case 'PRODUCT_DETAILS_SUCCESS':\r\n      return { loading: false, product: action.payload };\r\n    case 'PRODUCT_DETAILS_FAIL':\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'PRODUCT_DELETE_REQUEST':\r\n      return { loading: true };\r\n    //products already loaded\r\n    case 'PRODUCT_DELETE_SUCCESS':\r\n      return { loading: false, success: true };\r\n    case 'PRODUCT_DELETE_FAIL':\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'PRODUCT_CREATE_REQUEST':\r\n      return { loading: true };\r\n    //products already loaded\r\n    case 'PRODUCT_CREATE_SUCCESS':\r\n      return { loading: false, success: true, product: action.payload };\r\n    case 'PRODUCT_CREATE_FAIL':\r\n      return { loading: false, error: action.payload };\r\n    case 'PRODUCT_CREATE_RESET':\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case 'PRODUCT_UPDATE_REQUEST':\r\n      return { loading: true };\r\n    //products already loaded\r\n    case 'PRODUCT_UPDATE_SUCCESS':\r\n      return { loading: false, success: true, product: action.payload };\r\n    case 'PRODUCT_UPDATE_FAIL':\r\n      return { loading: false, error: action.payload };\r\n    case 'PRODUCT_UPDATE_RESET':\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'PRODUCT_CREATE_REVIEW_REQUEST':\r\n      return { loading: true };\r\n    //products already loaded\r\n    case 'PRODUCT_CREATE_REVIEW_SUCCESS':\r\n      return { loading: false, success: true };\r\n    case 'PRODUCT_CREATE_REVIEW_FAIL':\r\n      return { loading: false, error: action.payload };\r\n    case 'PRODUCT_CREATE_REVIEW_RESET':\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case 'CART_ADD_ITEM':\r\n      const item = action.payload;\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case 'CART_REMOVE_ITEM':\r\n      return {\r\n        ...state,\r\n        // replacing cartItems with a new one with selectedProduct filtered out\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    case 'CART_SAVE_SHIPPING_ADDRESS':\r\n      return {\r\n        ...state,\r\n        // replacing cartItems with a new one with selectedProduct filtered out\r\n        shippingAddress: action.payload,\r\n      };\r\n    case 'CART_SAVE_PAYMENT_METHOD':\r\n      return {\r\n        ...state,\r\n        // replacing cartItems with a new one with selectedProduct filtered out\r\n        paymentMethod: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'USER_LOGIN_REQUEST':\r\n      return { loading: true };\r\n    //products already loaded\r\n    case 'USER_LOGIN_SUCCESS':\r\n      return { loading: false, userInfo: action.payload };\r\n    case 'USER_LOGIN_FAIL':\r\n      return { loading: false, error: action.payload };\r\n    case 'USER_LOGOUT':\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'USER_REGISTER_REQUEST':\r\n      return { loading: true };\r\n    //products already loaded\r\n    case 'USER_REGISTER_SUCCESS':\r\n      return { loading: false, userInfo: action.payload };\r\n    case 'USER_REGISTER_FAIL':\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case 'USER_DETAILS_REQUEST':\r\n      return { ...state, loading: true };\r\n    //products already loaded\r\n    case 'USER_DETAILS_SUCCESS':\r\n      return { loading: false, user: action.payload };\r\n    case 'USER_DETAILS_FAIL':\r\n      return { loading: false, error: action.payload };\r\n    case 'USER_DETAILS_RESET':\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case 'USER_UPDATE_PROFILE_REQUEST':\r\n      return { loading: true };\r\n    //products already loaded\r\n    case 'USER_UPDATE_PROFILE_SUCCESS':\r\n      return { loading: false, success: true, user: action.payload };\r\n    case 'USER_UPDATE_PROFILE_FAIL':\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case 'USER_LIST_REQUEST':\r\n      return { loading: true };\r\n    //products already loaded\r\n    case 'USER_LIST_SUCCESS':\r\n      return { loading: false, users: action.payload };\r\n    case 'USER_LIST_FAIL':\r\n      return { loading: false, error: action.payload };\r\n    case 'USER_LIST_RESET':\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'USER_DELETE_REQUEST':\r\n      return { loading: true };\r\n    //products already loaded\r\n    case 'USER_DELETE_SUCCESS':\r\n      return { loading: false, success: true };\r\n    case 'USER_DELETE_FAIL':\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'USER_UPDATE_REQUEST':\r\n      return { loading: true };\r\n    case 'USER_UPDATE_SUCCESS':\r\n      return { loading: false, success: true };\r\n    case 'USER_UPDATE_FAIL':\r\n      return { loading: false, error: action.payload };\r\n    case 'USER_UPDATE_RESET':\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'ORDER_CREATE_REQUEST':\r\n      return {\r\n        loading: true,\r\n      };\r\n    case 'ORDER_CREATE_SUCCESS':\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n    case 'ORDER_CREATE_FAIL':\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case 'ORDER_DETAILS_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case 'ORDER_DETAILS_SUCCESS':\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n    case 'ORDER_DETAILS_FAIL':\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'ORDER_PAY_REQUEST':\r\n      return {\r\n        loading: true,\r\n      };\r\n    case 'ORDER_PAY_SUCCESS':\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case 'ORDER_PAY_FAIL':\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case 'ORDER_PAY_RESET':\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case 'ORDER_LIST_MY_REQUEST':\r\n      return {\r\n        loading: true,\r\n      };\r\n    case 'ORDER_LIST_MY_SUCCESS':\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case 'ORDER_LIST_MY_FAIL':\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case 'ORDER_LIST_MY_RESET':\r\n      return {\r\n        orders: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case 'ORDER_LIST_REQUEST':\r\n      return {\r\n        loading: true,\r\n      };\r\n    case 'ORDER_LIST_SUCCESS':\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case 'ORDER_LIST_FAIL':\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case 'ORDER_LIST_RESET':\r\n      return {\r\n        orders: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'ORDER_DELIVER_REQUEST':\r\n      return {\r\n        loading: true,\r\n      };\r\n    case 'ORDER_DELIVER_SUCCESS':\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case 'ORDER_DELIVER_FAIL':\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case 'ORDER_DELIVER_RESET':\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const userActions_login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: 'USER_LOGIN_REQUEST',\r\n    });\r\n\r\n    //config for sending data, we want to send\r\n    //headers with content type/ will also\r\n    //set authorization for the token\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: 'USER_LOGIN_SUCCESS', payload: data });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'USER_LOGIN_FAIL',\r\n      payload:\r\n        //trying to getting the message obj from the custom error msg we\r\n        //created, if !exists, display the current msg\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userActions_logout = () => async (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  dispatch({ type: 'USER_LOGOUT' });\r\n  dispatch({ type: 'USER_DETAILS_RESET' });\r\n  dispatch({ type: 'ORDER_LIST_MY_RESET' });\r\n  dispatch({ type: 'USER_LIST_RESET' });\r\n};\r\n\r\nexport const userActions_register =\r\n  (name, email, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: 'USER_REGISTER_REQUEST',\r\n      });\r\n\r\n      //config for sending data, we want to send\r\n      //headers with content type/ will also\r\n      //set authorization for the token\r\n      const config = {\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        '/api/users',\r\n        { name, email, password },\r\n        config\r\n      );\r\n\r\n      dispatch({ type: 'USER_REGISTER_SUCCESS', payload: data });\r\n      dispatch({ type: 'USER_LOGIN_SUCCESS', payload: data });\r\n\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'USER_REGISTER_FAIL',\r\n        payload:\r\n          //trying to getting the message obj from the custom error msg we\r\n          //created, if !exists, display the current msg\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n//getting user info from state which has the token in ti\r\nexport const userActions_getUserDetails =\r\n  (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: 'USER_DETAILS_REQUEST',\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n      //config for sending data, we want to send\r\n      //headers with content type/ will also\r\n      //set authorization for the token\r\n      const config = {\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n      dispatch({ type: 'USER_DETAILS_SUCCESS', payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'USER_DETAILS_FAIL',\r\n        payload:\r\n          //trying to getting the message obj from the custom error msg we\r\n          //created, if !exists, display the current msg\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const userActions_updateUserProfile =\r\n  (user) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: 'USER_UPDATE_PROFILE_REQUEST',\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n      //config for sending data, we want to send\r\n      //headers with content type/ will also\r\n      //set authorization for the token\r\n      const config = {\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n      dispatch({ type: 'USER_UPDATE_PROFILE_SUCCESS', payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'USER_UPDATE_PROFILE_FAIL',\r\n        payload:\r\n          //trying to getting the message obj from the custom error msg we\r\n          //created, if !exists, display the current msg\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const userActions_listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: 'USER_LIST_REQUEST',\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    //config for sending data, we want to send\r\n    //headers with content type/ will also\r\n    //set authorization for the token\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({ type: 'USER_LIST_SUCCESS', payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'USER_LIST_FAIL',\r\n      payload:\r\n        //trying to getting the message obj from the custom error msg we\r\n        //created, if !exists, display the current msg\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userActions_deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: 'USER_DELETE_REQUEST' });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    //config for sending data, we want to send\r\n    //headers with content type/ will also\r\n    //set authorization for the token\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: 'USER_DELETE_SUCCESS' });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'USER_DELETE_FAIL',\r\n      payload:\r\n        //trying to getting the message obj from the custom error msg we\r\n        //created, if !exists, display the current msg\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userActions_updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: 'USER_UPDATE_REQUEST' });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    //config for sending data, we want to send\r\n    //headers with content type/ will also\r\n    //set authorization for the token\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({ type: 'USER_UPDATE_SUCCESS' });\r\n    dispatch({ type: 'USER_DETAILS_SUCCESS', payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'USER_UPDATE_FAIL',\r\n      payload:\r\n        //trying to getting the message obj from the custom error msg we\r\n        //created, if !exists, display the current msg\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","// script containing product-actions which will be dispatched by product-Reducer\r\n// for updating product(s) global state\r\nimport axios from 'axios';\r\n\r\n//using thunk for fn inside of a fn\r\nexport const productActions_list =\r\n  (keyword = '', pageNumber = '') =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: 'PRODUCT_LIST_REQUEST',\r\n      });\r\n      const { data } = await axios.get(\r\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n      );\r\n\r\n      dispatch({\r\n        type: 'PRODUCT_LIST_SUCCESS',\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'PRODUCT_LIST_FAIL',\r\n        payload:\r\n          //trying to getting the message obj from the custom error msg we\r\n          //created, if !exists, display the current msg\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const productActions_details = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: 'PRODUCT_DETAILS_REQUEST',\r\n    });\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: 'PRODUCT_DETAILS_SUCCESS',\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'PRODUCT_DETAILS_FAIL',\r\n      payload:\r\n        //trying to getting the message obj from the custom error msg we\r\n        //created, if not exists, display the current msg\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/*\r\n-try (to dispatch this action) or catch (error)\r\n-grabbing user's info from the state\r\n-grabbing the 'token' from user's info and sending it as headers\r\n in the GET request\r\n-GET request returns a promise which is grabbed in 'data' const\r\n-finally dispatching the action containing the data\r\n*/\r\n\r\nexport const productActions_delete = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: 'PRODUCT_DELETE_REQUEST' });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = { headers: { Authorization: `Bearer ${userInfo.token}` } };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({ type: 'PRODUCT_DELETE_SUCCESS' });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'PRODUCT_DELETE_FAIL',\r\n      payload:\r\n        //trying to getting the message obj from the custom error msg we\r\n        //created, if not exists, display the current msg\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const productActions_create = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: 'PRODUCT_CREATE_REQUEST' });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products/`, {}, config);\r\n\r\n    dispatch({ type: 'PRODUCT_CREATE_SUCCESS', payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'PRODUCT_CREATE_FAIL',\r\n      payload:\r\n        //trying to getting the message obj from the custom error msg we\r\n        //created, if not exists, display the current msg\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const productActions_update =\r\n  (product) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: 'PRODUCT_UPDATE_REQUEST' });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/products/${product._id}`,\r\n        product,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: 'PRODUCT_UPDATE_SUCCESS', payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'PRODUCT_UPDATE_FAIL',\r\n        payload:\r\n          //trying to getting the message obj from the custom error msg we\r\n          //created, if not exists, display the current msg\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const productActions_createProductReview =\r\n  (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: 'PRODUCT_CREATE_REVIEW_REQUEST' });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n      dispatch({ type: 'PRODUCT_CREATE_REVIEW_SUCCESS' });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'PRODUCT_CREATE_REVIEW_FAIL',\r\n        payload:\r\n          //trying to getting the message obj from the custom error msg we\r\n          //created, if not exists, display the current msg\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n","//script for exporting custom message alert in the web app\r\n\r\nimport React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { productActions_list } from '../actions/productActions';\r\nimport Message from '../components/message';\r\nimport { Image, InputGroup, Form } from 'react-bootstrap';\r\n\r\nconst SearchBox = () => {\r\n  const [keyword, setKeyword] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  //extracting 'productList' part of state, defined in store\r\n  const productList = useSelector((state) => state.productList);\r\n  //extracting info from 'productList' part of state into an Obj\r\n  const { loading, error, products } = productList;\r\n\r\n  //dispatching 'list products' action using useEffect\r\n  useEffect(() => {\r\n    dispatch(productActions_list(keyword));\r\n  }, [dispatch, keyword]);\r\n\r\n  document.body.addEventListener(\r\n    'click',\r\n    () => !keyword.trim() && setKeyword('')\r\n  );\r\n  return (\r\n    <>\r\n      <Form>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type='text'\r\n            autoComplete='off'\r\n            value={keyword}\r\n            onChange={(e) => setKeyword(e.target.value)}\r\n            placeholder='Search...'\r\n            className='srch mr-sm-2 ml-sm-5'\r\n          ></Form.Control>\r\n        </InputGroup>\r\n        {keyword.trim() &&\r\n          (loading ? (\r\n            <div style={{ position: 'absolute', zIndex: '10' }}>\r\n              <div\r\n                className='dropdown-item'\r\n                style={{\r\n                  backgroundColor: 'white',\r\n                  minWidth: '100%',\r\n                  padding: '5px',\r\n                  borderRadius: '8px',\r\n                  paddingTop: '0.7rem',\r\n                  paddingBottom: '1rem',\r\n                  marginTop: '0.5rem',\r\n                }}\r\n              >\r\n                <div\r\n                  className='dropdown-item'\r\n                  style={{\r\n                    backgroundColor: 'white',\r\n                    borderRadius: '8px',\r\n                  }}\r\n                >\r\n                  Please Wait...\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                zIndex: '10',\r\n                marginTop: '0.5rem',\r\n                backgroundColor: 'white',\r\n                paddingTop: '0.8rem',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              {products.map((product) => (\r\n                <div\r\n                  className='dropdown-item'\r\n                  style={{\r\n                    backgroundColor: 'white',\r\n                    borderRadius: '8px',\r\n                  }}\r\n                >\r\n                  <Link to={`/product/${product._id}`}>\r\n                    <Image\r\n                      src={`/${product.image}`}\r\n                      className='srchImg'\r\n                    ></Image>\r\n                    {product.name}\r\n                    <hr />\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// react Router Bootstrap used for wrapping react boot element in\r\n// <linkcontainer> to make it behave like react Router <link>\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\r\nimport PersonOutlineOutlinedIcon from '@material-ui/icons/PersonOutlineOutlined';\r\nimport { userActions_logout } from '../actions/userActions';\r\nimport SearchBox from './SearchBox';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(userActions_logout());\r\n    window.location.assign('/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className='mb-0'>\r\n        <Navbar\r\n          style={{ backgroundColor: 'black' }}\r\n          variant='dark'\r\n          expand='lg'\r\n          collapseOnSelect\r\n        >\r\n          <Container>\r\n            <LinkContainer to='/'>\r\n              <Navbar.Brand className='mx-2'>Rejuvenate</Navbar.Brand>\r\n            </LinkContainer>\r\n            <Nav className='mx-2 navbar-nav text-center d-flex flex-row flex-grow-1 justify-content-end justify-content-md-start justify-content-lg-start'>\r\n              {userInfo ? (\r\n                <>\r\n                  <PersonOutlineOutlinedIcon\r\n                    style={{ marginTop: '1.1rem' }}\r\n                    className=' mx-1'\r\n                  />\r\n                  <NavDropdown\r\n                    style={{ marginRight: '0.8rem', marginTop: '0.8rem' }}\r\n                    className='mt-2'\r\n                    title={userInfo.name.split(' ')[0]}\r\n                    id='username'\r\n                  >\r\n                    <LinkContainer to='/profile'>\r\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <NavDropdown.Item onClick={logoutHandler}>\r\n                      Logout\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <PersonOutlineOutlinedIcon\r\n                      style={{ marginTop: '0.35rem', fontSize: '1.7rem' }}\r\n                    />\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <ShoppingCartOutlinedIcon\r\n                    style={{ marginTop: '0.4rem' }}\r\n                    className=' mx-2'\r\n                  />\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav>\r\n            <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n            <Navbar.Collapse\r\n              id='basic-navbar-nav'\r\n              className='collapse navbar-collapse justify-content-end'\r\n            >\r\n              <Nav classNameName='ms-auto'>\r\n                {userInfo && userInfo.isAdmin && (\r\n                  <NavDropdown title='Admin' id='adminmenu'>\r\n                    <LinkContainer to='/admin/userlist'>\r\n                      <NavDropdown.Item>Users</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <LinkContainer to='/admin/productlist'>\r\n                      <NavDropdown.Item>Products</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <LinkContainer to='/admin/orderlist'>\r\n                      <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                  </NavDropdown>\r\n                )}\r\n                {/* <Nav.Link>\r\n                  <LinkContainer to={`/about`}>About</LinkContainer>\r\n                </Nav.Link> */}\r\n                <Route\r\n                  render={({ history }) => <SearchBox history={history} />}\r\n                />\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className='foot text-white mt-5'>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <ListGroup>\r\n              <ListGroup.Item className='mt-5'>\r\n                <h4>Rejuvenate</h4>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <i\r\n                  className='fab fa-facebook-square'\r\n                  style={{ fontSize: '1.5rem', marginRight: '1rem' }}\r\n                ></i>\r\n                <i\r\n                  className='fab fa-instagram-square'\r\n                  style={{ fontSize: '1.5rem' }}\r\n                ></i>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col>\r\n            <ListGroup>\r\n              <div className='mt-5'>\r\n                <h5 style={{ color: 'white', marginBottom: '2rem' }}>About</h5>\r\n              </div>\r\n              <div>Our Values</div>\r\n              <div>Privacy Policies</div>\r\n              <div>Terms & Conditions</div>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col>\r\n            <ListGroup>\r\n              <div className='mt-5'>\r\n                <h5 style={{ color: 'white', marginBottom: '2rem' }}>Help</h5>\r\n              </div>\r\n              <div>Knowledge</div>\r\n              <div>FAQs</div>\r\n              <div>Refund & Return Policies</div>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col>\r\n            <ListGroup>\r\n              <div className='mt-5'>\r\n                <h5 style={{ color: 'white', marginBottom: '2rem' }}>\r\n                  Sign Up and Save !\r\n                </h5>\r\n              </div>\r\n              <div>\r\n                Subscribe to get special offers, free giveaways, and\r\n                once-in-a-lifetime deals.\r\n              </div>\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className='text-center mt-4 py-3'>&copy; Rupesh 2021</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","//script for exporting custom loading icon in the web app\r\n\r\nimport React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '50px',\r\n        height: '50px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n      className='mt-4'\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination className='justify-content-center mt-3'>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","//script for the rating component on each product\r\n\r\nimport React from 'react';\r\n\r\nconst Rating = ({ value, text }) => {\r\n  return (\r\n    <div className='rating mb-2'>\r\n      <span>\r\n        <i\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'fas fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span> {text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n","//script for rendering the Product component\r\n//takes the actual product as json obj and renders a react component\r\n\r\nimport React from 'react';\r\n//using react router for enabling seamless routing/navigation between\r\n//react components\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\n\r\n// product prop being received from HomeScreen file\r\nconst Product = ({ product }) => {\r\n  return (\r\n    //card for a single product\r\n    <Card className='my-3 shadow-sm bg-white rounded'>\r\n      {/* image (<Link> render actual <a> bts)*/}\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={`/${product.image}`} variant='top' />\r\n      </Link>\r\n      {/* body */}\r\n      <Card.Body>\r\n        {/* title */}\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title className='ttle'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n        {/* rating */}\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n        {/* skinConcern */}\r\n        <Card.Text className='ctg'>{product.category}</Card.Text>\r\n        {/* price */}\r\n        <Card.Text>\r\n          <span className='mrp'>₹{product.price + 200}</span> ₹{product.price}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","//script for rendering the Homescreen\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { productActions_list } from '../actions/productActions';\r\nimport { Container, Image, Row, Col } from 'react-bootstrap';\r\nimport Message from '../components/message';\r\nimport Loader from '../components/loader';\r\nimport Paginate from '../components/Paginate';\r\nimport Product from '../components/Product';\r\n//list of all products\r\n//state levels- component(menu,forms) and global(products, users)\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //extracting 'productList' part of state, defined in store\r\n  const productList = useSelector((state) => state.productList);\r\n  //extracting info from 'productList' part of state into an Obj\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  //dispatching 'list products' action using useEffect\r\n  useEffect(() => {\r\n    dispatch(productActions_list('', pageNumber));\r\n  }, [dispatch, match, pageNumber]);\r\n\r\n  return (\r\n    <>\r\n      {/* explore */}\r\n      <Container className='hello' fluid>\r\n        <Row>\r\n          <Col>\r\n            <h1>Let's talk Science.</h1>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container className='helloImg' fluid>\r\n        <Row>\r\n          <Col>\r\n            <Image\r\n              alt=''\r\n              src='https://cdn.shopify.com/s/files/1/0410/9608/5665/files/minimalist-skin-1-min.png?v=1593807250'\r\n              fluid\r\n            ></Image>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container className='text-center py-5' fluid>\r\n        <Row style={{ paddingLeft: '6rem', paddingRight: '6rem' }}>\r\n          <Col>\r\n            <h4>\r\n              <strong>Looking for clean & effective skincare products?</strong>\r\n            </h4>\r\n            <p style={{ paddingTop: '1rem' }}>\r\n              We have all been there. You look for a product that addresses your\r\n              particular skin concern. But there's an ocean of products out\r\n              there with numerous promises & claims but hardly any clear\r\n              information about ingredients used and their concentration. We are\r\n              here to offer no-nonsense, hardworking, active based products that\r\n              do what they are expected to do.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <h3\r\n        style={{\r\n          textAlign: 'center',\r\n          marginTop: '4rem',\r\n          marginBottom: '1.8rem',\r\n        }}\r\n      >\r\n        <span className='underlineCustom'>Shop our bestsellers</span>\r\n      </h3>\r\n      {/*if loading then show loading, else show error, else show actual data*/}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Container className='mb-5'>\r\n            <Row className='justify-content-center'>\r\n              {/*loop through all products and render Product component for each product, while\r\n                    passing array element as a prop*/}\r\n              {products.map((currProduct) => (\r\n                <Col xs={5} sm={5} md={4} lg={3}>\r\n                  <Product product={currProduct} />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n            <Paginate pages={pages} page={page} />\r\n          </Container>\r\n          {/* explore */}\r\n          <Container fluid>\r\n            <Container className='text-center'>\r\n              <Row className='mb-2'>\r\n                <h2 style={{ marginTop: '8rem' }}>Real Stories</h2>\r\n              </Row>\r\n              <Row style={{ marginBottom: '11rem' }}>\r\n                <Col sm={6} md={4}>\r\n                  <i\r\n                    className='fas fa-quote-left'\r\n                    style={{ float: 'left' }}\r\n                  ></i>\r\n                  <p>\r\n                    &nbsp; I love this Vitamin C serum, I can see my skin\r\n                    becomes brighter after one to two days only which is\r\n                    remarkable.\r\n                  </p>\r\n                  <p>\r\n                    <strong> - John Doe </strong>\r\n                  </p>\r\n                </Col>\r\n                <Col sm={6} md={4}>\r\n                  <i\r\n                    className='fas fa-quote-left'\r\n                    style={{ float: 'left' }}\r\n                  ></i>\r\n                  <p>\r\n                    &nbsp; I have been struggling with oily, acne-prone skin.\r\n                    After applying the serum before bed, I wake up with fresh &\r\n                    even skin that hasn't gotten oily overnight!\r\n                  </p>\r\n                  <p>\r\n                    <strong> - Jane Fletcher</strong>\r\n                  </p>\r\n                </Col>\r\n                <Col sm={6} md={4}>\r\n                  <i\r\n                    className='fas fa-quote-left'\r\n                    style={{ float: 'left' }}\r\n                  ></i>\r\n                  <p>\r\n                    &nbsp; Its really working. I was having mild wrinkles around\r\n                    my eyes but it has been reduced after 4-5 applications.\r\n                  </p>\r\n                  <p>\r\n                    <strong> - Alex Mercer </strong>\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Container>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","//script for rendering the Product screen\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  ListGroupItem,\r\n  Form,\r\n} from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport {\r\n  productActions_details,\r\n  productActions_createProductReview,\r\n} from '../actions/productActions';\r\nimport Loader from '../components/loader';\r\nimport Message from '../components/message';\r\n\r\n// <Route/> renders ProductScreen component by passing\r\n// props (match, location, history)\r\n// here, we're extracting history & match for use\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const { error: errorProductReview, success: successProductReview } =\r\n    productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      alert('Review Submitted!');\r\n      setRating(0);\r\n      setComment('');\r\n      dispatch({ type: 'PRODUCT_CREATE_REVIEW_RESET' });\r\n    }\r\n    dispatch(productActions_details(match.params.id));\r\n  }, [dispatch, match, successProductReview]);\r\n\r\n  //handles add to cart button presses\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      productActions_createProductReview(match.params.id, { rating, comment })\r\n    );\r\n  };\r\n  return (\r\n    <Container style={{ padding: '1.2rem' }}>\r\n      <Link className='btn btn-outline-primary my-3' to='/'>\r\n        Go back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger' />\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col md={6} className='text-center'>\r\n              <Image src={`/${product.image}`} width='400px' fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroupItem>\r\n                  <h2 className='py-2'>{product.name}</h2>\r\n                  <div className='ctg'>{product.category}</div>\r\n                </ListGroupItem>\r\n\r\n                <ListGroupItem className='my-2'>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroupItem>\r\n\r\n                <ListGroupItem>\r\n                  Price: <span className='mrp'>₹{product.price + 200}</span> ₹\r\n                  {product.price}\r\n                </ListGroupItem>\r\n\r\n                <ListGroupItem className='my-2'>\r\n                  <h5 className='mb-3'>Description: </h5>\r\n                  {product.description}\r\n                </ListGroupItem>\r\n\r\n                <ListGroupItem>\r\n                  <h5 className='mb-3'>Beneficial for: </h5> {product.category}\r\n                </ListGroupItem>\r\n\r\n                <ListGroupItem>\r\n                  <h5 className='mt-2 mb-3'>This product is</h5>\r\n                  <p>\r\n                    <i\r\n                      className='far fa-check-square'\r\n                      style={{ fontSize: '1.5rem' }}\r\n                    ></i>\r\n                    &nbsp; Fragrance Free\r\n                  </p>\r\n\r\n                  <p>\r\n                    <i\r\n                      className='far fa-check-square'\r\n                      style={{ fontSize: '1.5rem' }}\r\n                    ></i>\r\n                    &nbsp; Silicone Free\r\n                  </p>\r\n\r\n                  <p>\r\n                    <i\r\n                      className='far fa-check-square'\r\n                      style={{ fontSize: '1.5rem' }}\r\n                    ></i>\r\n                    &nbsp; Brightens Complexion\r\n                  </p>\r\n\r\n                  <p>\r\n                    <i\r\n                      className='far fa-check-square'\r\n                      style={{ fontSize: '1.5rem' }}\r\n                    ></i>\r\n                    &nbsp; Paraben Free\r\n                  </p>\r\n\r\n                  <p>\r\n                    <i\r\n                      className='far fa-check-square'\r\n                      style={{ fontSize: '1.5rem' }}\r\n                    ></i>\r\n                    &nbsp; Reduces Dark Spots\r\n                  </p>\r\n\r\n                  <p>\r\n                    <i\r\n                      className='far fa-check-square'\r\n                      style={{ fontSize: '1.5rem' }}\r\n                    ></i>\r\n                    &nbsp; pH: 3.9 - 4.9\r\n                  </p>\r\n                </ListGroupItem>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup varients='flush'>\r\n                  <ListGroupItem>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>₹{product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroupItem>\r\n\r\n                  <ListGroupItem>\r\n                    <Row>\r\n                      <Col>Status: </Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroupItem>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroupItem>\r\n                      <Row>\r\n                        <Col>Qty:</Col>\r\n                        <Col>\r\n                          {/*  */}\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroupItem>\r\n                  )}\r\n\r\n                  <ListGroupItem>\r\n                    <Button\r\n                      className='btn btn-primary w-100'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                      onClick={addToCartHandler}\r\n                    >\r\n                      Add to cart\r\n                    </Button>\r\n                  </ListGroupItem>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row className='mt-4'>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroupItem key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroupItem>\r\n                ))}\r\n                <ListGroupItem>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label className='mb-1 mt-2'>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label className='mb-1 mt-2'>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button className='mt-3' type='submit' variant='primary'>\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>Sign In</Link> to write a review.\r\n                    </Message>\r\n                  )}\r\n                </ListGroupItem>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios';\r\n\r\nexport const cartActions_add = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: 'CART_ADD_ITEM',\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n  //storing cartItems in localstorage for later retrieval\r\n  //stringify because only strings saved in local storage\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const cartActions_remove = (id) => async (dispatch, getState) => {\r\n  dispatch({\r\n    type: 'CART_REMOVE_ITEM',\r\n    payload: id,\r\n  });\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const cartActions_saveShippingAddress = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: 'CART_SAVE_SHIPPING_ADDRESS',\r\n    payload: data,\r\n  });\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const cartActions_savePaymentMethod = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: 'CART_SAVE_PAYMENT_METHOD',\r\n    payload: data,\r\n  });\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ListGroupItem,\r\n  Container,\r\n} from 'react-bootstrap';\r\nimport Message from '../components/message';\r\nimport { cartActions_add, cartActions_remove } from '../actions/cartActions';\r\n\r\n//<Route/> renders CartScreen component with\r\n// props (match, location, history)\r\n// here,extracting match,location,history for use\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(cartActions_add(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(cartActions_remove(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping');\r\n  };\r\n\r\n  return (\r\n    <Container style={{ padding: '1.2rem' }}>\r\n      <Row>\r\n        <Col md={8}>\r\n          <h1>Shopping Cart</h1>\r\n          {cartItems.length === 0 ? (\r\n            <Message>\r\n              Your cart is empty.<Link to='/'>Go Back</Link>\r\n            </Message>\r\n          ) : (\r\n            <ListGroup variant='flush'>\r\n              {cartItems.map((item) => (\r\n                <ListGroupItem key={item.product}>\r\n                  <Row>\r\n                    <Col md={2}>\r\n                      <Image\r\n                        src={`/${item.image}`}\r\n                        alt={item.name}\r\n                        fluid\r\n                        rounded\r\n                        style={{ width: '50px' }}\r\n                      />\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                    </Col>\r\n                    <Col md={2}>₹{item.price}</Col>\r\n                    <Col md={2}>\r\n                      <Form.Control\r\n                        as='select'\r\n                        value={item.qty}\r\n                        onChange={(e) =>\r\n                          dispatch(\r\n                            cartActions_add(\r\n                              item.product,\r\n                              Number(e.target.value)\r\n                            )\r\n                          )\r\n                        }\r\n                      >\r\n                        {[...Array(item.countInStock).keys()].map((x) => (\r\n                          <option key={x + 1} value={x + 1}>\r\n                            {x + 1}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                      <Button\r\n                        type='button'\r\n                        variant='light'\r\n                        onClick={() => removeFromCartHandler(item.product)}\r\n                      >\r\n                        <i className='fas fa-trash'></i>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroupItem>\r\n              ))}\r\n            </ListGroup>\r\n          )}\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroupItem>\r\n                <h2>\r\n                  Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}\r\n                  ) items\r\n                </h2>\r\n                ₹\r\n                {cartItems\r\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                  .toFixed(2)}\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cartItems.length === 0}\r\n                  onClick={checkoutHandler}\r\n                >\r\n                  Proceed to Checkout\r\n                </Button>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Form, Button, Row, Col, FormGroup } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/message';\r\nimport Loader from '../components/loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { userActions_login } from '../actions/userActions';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //DISPATCH LOGIN\r\n    dispatch(userActions_login(email, password));\r\n  };\r\n\r\n  return (\r\n    <Container style={{ padding: '1.2rem' }}>\r\n      <FormContainer>\r\n        <h1>Sign In</h1>\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <FormGroup controlId='email'>\r\n            <Form.Label className='mt-2 mb-1'>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            ></Form.Control>\r\n          </FormGroup>\r\n          <FormGroup controlId='password'>\r\n            <Form.Label className='mt-2 mb-1'>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            ></Form.Control>\r\n          </FormGroup>\r\n          <Button className='mt-3' type='submit' variant='primary'>\r\n            Sign In\r\n          </Button>\r\n        </Form>\r\n        <Row>\r\n          <Col className='mt-2'>\r\n            New Customer ?{' '}\r\n            <Link\r\n              to={redirect ? `/register?redirect=${redirect}` : '/register'}\r\n            >\r\n              Register\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Form, Button, Row, Col, FormGroup } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/message';\r\nimport Loader from '../components/loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { userActions_register } from '../actions/userActions';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match.');\r\n    } else {\r\n      //DISPATCH REGISTER\r\n      dispatch(userActions_register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container style={{ padding: '1.2rem' }}>\r\n      <FormContainer>\r\n        <h1>Sign Up</h1>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {loading && <Loader />}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <FormGroup controlId='name'>\r\n            <Form.Label className='mt-2 mb-1'>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n            ></Form.Control>\r\n          </FormGroup>\r\n\r\n          <FormGroup controlId='email'>\r\n            <Form.Label className='mt-2 mb-1'>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            ></Form.Control>\r\n          </FormGroup>\r\n          <FormGroup controlId='password'>\r\n            <Form.Label className='mt-2 mb-1'>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            ></Form.Control>\r\n          </FormGroup>\r\n\r\n          <FormGroup controlId='confirmPassword'>\r\n            <Form.Label className='mt-2 mb-1'>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={(e) => {\r\n                setConfirmPassword(e.target.value);\r\n              }}\r\n            ></Form.Control>\r\n          </FormGroup>\r\n\r\n          <Button className='mt-3' type='submit' variant='primary'>\r\n            Register\r\n          </Button>\r\n        </Form>\r\n        <Row>\r\n          <Col>\r\n            Have an accout ?{' '}\r\n            <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n              Login\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Form, Button, Row, Col, Table } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/message';\r\nimport Loader from '../components/loader';\r\nimport {\r\n  userActions_getUserDetails,\r\n  userActions_updateUserProfile,\r\n} from '../actions/userActions';\r\nimport { orderActions_listMyOrders } from '../actions/orderActions';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //useState(null) setconfirmPassoword=useState(null);\r\n  //const [message, setMessage] = useState()\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(userActions_getUserDetails('profile'));\r\n        dispatch(orderActions_listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match.');\r\n    } else {\r\n      //DISPATCH UPDATE PROFILE\r\n      dispatch(\r\n        userActions_updateUserProfile({ id: user._id, name, email, password })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container style={{ padding: '1.2rem' }}>\r\n      <Row>\r\n        <Col md={3}>\r\n          <h2>User Profile</h2>\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {loading && <Loader />}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {success && <Message variant='success'>Profile Updated!</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label className='mt-2 mb-1'>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label className='mt-2 mb-1'>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter Email'\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='password'>\r\n              <Form.Label className='mt-2 mb-1'>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label className='mt-2 mb-1'>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm password'\r\n                value={confirmPassword}\r\n                onChange={(e) => {\r\n                  setConfirmPassword(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button className='mt-3' type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n          <h2>My Orders</h2>\r\n          {loadingOrders ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{errorOrders}</Message>\r\n          ) : (\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>DATE</th>\r\n                  <th>TOTAL</th>\r\n                  <th>PAID</th>\r\n                  <th>DELIVERED</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orders.map((order) => (\r\n                  <tr key={order._id}>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                    <td>{order.totalPrice}</td>\r\n                    <td>\r\n                      {order.isPaid ? (\r\n                        order.paidAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className='fas fa-times'\r\n                          style={{ color: 'red' }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {order.isDelivered ? (\r\n                        order.deliveredAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className='fas fa-times'\r\n                          style={{ color: 'red' }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <LinkContainer to={`/order/${order._id}`}>\r\n                        <Button variant='light' className='btn-sm'>\r\n                          Details\r\n                        </Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import axios from 'axios';\r\n\r\nexport const orderActions_createOrder =\r\n  (order) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: 'ORDER_CREATE_REQUEST',\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n      //config for sending data, we want to send\r\n      //headers with content type/ will also\r\n      //set authorization for the token\r\n      const config = {\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n      dispatch({ type: 'ORDER_CREATE_SUCCESS', payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'ORDER_CREATE_FAIL',\r\n        payload:\r\n          //trying to getting the message obj from the custom error msg we\r\n          //created, if !exists, display the current msg\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const orderActions_getOrderDetails =\r\n  (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: 'ORDER_DETAILS_REQUEST',\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n      //config for sending data, we want to send\r\n      //headers with content type/ will also\r\n      //set authorization for the token\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n      dispatch({ type: 'ORDER_DETAILS_SUCCESS', payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'ORDER_DETAILS_FAIL',\r\n        payload:\r\n          //trying to getting the message obj from the custom error msg we\r\n          //created, if !exists, display the current msg\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\nexport const orderActions_payOrder =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: 'ORDER_PAY_REQUEST',\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n      //config for sending data, we want to send\r\n      //headers with content type/ will also\r\n      //set authorization for the token\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderId}/pay`,\r\n        paymentResult,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: 'ORDER_PAY_SUCCESS', payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'ORDER_PAY_FAIL',\r\n        payload:\r\n          //trying to getting the message obj from the custom error msg we\r\n          //created, if !exists, display the current msg\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\nexport const orderActions_deliverOrder =\r\n  (order) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: 'ORDER_DELIVER_REQUEST',\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n      //config for sending data, we want to send\r\n      //headers with content type/ will also\r\n      //set authorization for the token\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/orders/${order._id}/deliver`,\r\n        {},\r\n        config\r\n      );\r\n\r\n      dispatch({ type: 'ORDER_DELIVER_SUCCESS', payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'ORDER_DELIVER_FAIL',\r\n        payload:\r\n          //trying to getting the message obj from the custom error msg we\r\n          //created, if !exists, display the current msg\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\nexport const orderActions_listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: 'ORDER_LIST_MY_REQUEST',\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    //config for sending data, we want to send\r\n    //headers with content type/ will also\r\n    //set authorization for the token\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({ type: 'ORDER_LIST_MY_SUCCESS', payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'ORDER_LIST_MY_FAIL',\r\n      payload:\r\n        //trying to getting the message obj from the custom error msg we\r\n        //created, if !exists, display the current msg\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const orderActions_listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: 'ORDER_LIST_REQUEST',\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    //config for sending data, we want to send\r\n    //headers with content type/ will also\r\n    //set authorization for the token\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({ type: 'ORDER_LIST_SUCCESS', payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'ORDER_LIST_FAIL',\r\n      payload:\r\n        //trying to getting the message obj from the custom error msg we\r\n        //created, if !exists, display the current msg\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from 'react';\r\nimport { Container, Form, FormGroup, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { cartActions_saveShippingAddress } from '../actions/cartActions';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //dispatch saveShippingAddress\r\n    dispatch(\r\n      cartActions_saveShippingAddress({ address, city, postalCode, country })\r\n    );\r\n    history.push('/payment');\r\n  };\r\n  return (\r\n    <Container style={{ padding: '1.2rem' }}>\r\n      <FormContainer>\r\n        <CheckoutSteps step1 step2 />\r\n        <h1>Shipping</h1>\r\n        <Form onSubmit={submitHandler}>\r\n          <FormGroup controlId='address'>\r\n            <Form.Label className='mt-2 mb-1'>Address</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter address'\r\n              value={address}\r\n              required\r\n              onChange={(e) => {\r\n                setAddress(e.target.value);\r\n              }}\r\n            ></Form.Control>\r\n          </FormGroup>\r\n          <FormGroup controlId='city'>\r\n            <Form.Label className='mt-2 mb-1'>City</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter city'\r\n              value={city}\r\n              required\r\n              onChange={(e) => {\r\n                setCity(e.target.value);\r\n              }}\r\n            ></Form.Control>\r\n          </FormGroup>\r\n          <FormGroup controlId='postalCode'>\r\n            <Form.Label className='mt-2 mb-1'>PostalCode</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter postalCode'\r\n              value={postalCode}\r\n              required\r\n              onChange={(e) => {\r\n                setPostalCode(e.target.value);\r\n              }}\r\n            ></Form.Control>\r\n          </FormGroup>\r\n          <FormGroup controlId='country'>\r\n            <Form.Label className='mt-2 mb-1'>Country</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter country'\r\n              value={country}\r\n              required\r\n              onChange={(e) => {\r\n                setCountry(e.target.value);\r\n              }}\r\n            ></Form.Control>\r\n          </FormGroup>\r\n          <Button className='mt-3' type='submit' variant='primary'>\r\n            Continue\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n};\r\nexport default ShippingScreen;\r\n","import React, { useState } from 'react';\r\nimport { Container, Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { cartActions_savePaymentMethod } from '../actions/cartActions';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push('/shipping');\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(cartActions_savePaymentMethod(paymentMethod));\r\n    history.push('/placeorder');\r\n  };\r\n\r\n  return (\r\n    <Container style={{ padding: '1.2rem' }}>\r\n      <FormContainer>\r\n        <CheckoutSteps step1 step2 step3 />\r\n        <h1>Payment Method</h1>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group>\r\n            <Form.Label as='legend'>Select Method</Form.Label>\r\n            <Col>\r\n              <Form.Check\r\n                type='radio'\r\n                label='PayPal or Credit Card'\r\n                id='PayPal'\r\n                name='paymentMethod'\r\n                value='PayPal'\r\n                checked\r\n                onChange={(e) => setPaymentMethod(e.target.value)}\r\n              ></Form.Check>\r\n              <Form.Check\r\n                type='radio'\r\n                label='Stripe'\r\n                id='Stripe'\r\n                name='paymentMethod'\r\n                value='Stripe'\r\n                onChange={(e) => setPaymentMethod(e.target.value)}\r\n              ></Form.Check>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Button className='mt-3' type='submit' variant='primary'>\r\n            Continue\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button,\r\n  ListGroupItem,\r\n  Container,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { orderActions_createOrder } from '../actions/orderActions';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  //calc prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      orderActions_createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <Container style={{ padding: '1.2rem' }}>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty.</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ₹{item.price} = ₹{item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroupItem>\r\n                <h2>Order Summary</h2>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>₹{cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>₹{cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>₹{cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>₹{cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n\r\n              {error && <Message variant='danger'>{error}</Message>}\r\n\r\n              <ListGroupItem>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disable={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  ListGroupItem,\r\n  Container,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/message';\r\nimport Loader from '../components/loader';\r\nimport {\r\n  orderActions_getOrderDetails,\r\n  orderActions_payOrder,\r\n  orderActions_deliverOrder,\r\n} from '../actions/orderActions';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const orderId = match.params.id;\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    //calc prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n    //-------------Paypal script---------------\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n    //-----------------------------------------\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: 'ORDER_PAY_RESET' });\r\n      dispatch({ type: 'ORDER_DELIVER_RESET' });\r\n      dispatch(orderActions_getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order, history, userInfo]);\r\n\r\n  //--------Payment Successful Handler------------------\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(orderActions_payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(orderActions_deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Container style={{ padding: '1.2rem' }}>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered.</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid.</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty.</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={`/${item.image}`}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                            style={{ width: '50px' }}\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ₹{item.price} = ₹{item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroupItem>\r\n                <h2>Order Summary</h2>\r\n              </ListGroupItem>\r\n\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>₹{order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>₹{order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>₹{order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>₹{order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n\r\n              {!order.isPaid && (\r\n                <ListGroupItem>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroupItem>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroupItem>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block w-100'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark as Delivered\r\n                    </Button>\r\n                  </ListGroupItem>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Container, Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/message';\r\nimport Loader from '../components/loader';\r\nimport {\r\n  userActions_listUsers,\r\n  userActions_deleteUser,\r\n} from '../actions/userActions';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(userActions_listUsers());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(userActions_deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container style={{ padding: '1.2rem' }}>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Form, Button, FormGroup } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/message';\r\nimport Loader from '../components/loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport {\r\n  userActions_getUserDetails,\r\n  userActions_updateUser,\r\n} from '../actions/userActions';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: 'USER_UPDATE_RESET' });\r\n      history.push('/admin/userList');\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(userActions_getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [user, history, dispatch, userId, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userActions_updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <Container style={{ padding: '1.2rem' }}>\r\n      <Link to='/admin/userList' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {error && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='default'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <FormGroup controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </FormGroup>\r\n\r\n            <FormGroup controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </FormGroup>\r\n            <FormGroup controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                checked={isAdmin}\r\n                label='Is Admin'\r\n                onChange={(e) => {\r\n                  setIsAdmin(e.target.checked);\r\n                }}\r\n              ></Form.Check>\r\n            </FormGroup>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Container, Row, Col, Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/message';\r\nimport Loader from '../components/loader';\r\nimport {\r\n  productActions_list,\r\n  productActions_delete,\r\n  productActions_create,\r\n} from '../actions/productActions';\r\nimport Paginate from '../components/Paginate';\r\n\r\nconst ProductListScreen = ({ match, history }) => {\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'PRODUCT_CREATE_RESET' });\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/login');\r\n    }\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(productActions_list('', pageNumber));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(productActions_delete(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(productActions_create());\r\n  };\r\n\r\n  return (\r\n    <Container style={{ padding: '1.2rem' }}>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus' style={{ marginRight: '10px' }}></i>{' '}\r\n            Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm mt-3'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/product/${product._id}`}>\r\n                      <Button>{product.name}</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                  <td>₹{product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true}></Paginate>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Form, Button, FormGroup } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/message';\r\nimport Loader from '../components/loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport {\r\n  productActions_details,\r\n  productActions_update,\r\n} from '../actions/productActions';\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: 'PRODUCT_UPDATE_RESET' });\r\n      history.push('/admin/productlist');\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(productActions_details(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setBrand(product.brand);\r\n        setImage(product.image);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [product, history, dispatch, productId, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        header: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      productActions_update({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container style={{ padding: '1.2rem' }}>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='default'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <FormGroup controlId='name'>\r\n              <Form.Label className='mt-2 mb-1'>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </FormGroup>\r\n\r\n            <FormGroup controlId='price'>\r\n              <Form.Label className='mt-2 mb-1'>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => {\r\n                  setPrice(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </FormGroup>\r\n\r\n            <FormGroup controlId='image'>\r\n              <Form.Label className='mt-2 mb-1'>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => {\r\n                  setImage(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n                className='mb-2 mt-2'\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </FormGroup>\r\n\r\n            <FormGroup controlId='brand'>\r\n              <Form.Label className='mt-2 mb-1'>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => {\r\n                  setBrand(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </FormGroup>\r\n\r\n            <FormGroup controlId='category'>\r\n              <Form.Label className='mt-2 mb-1'>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => {\r\n                  setCategory(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </FormGroup>\r\n\r\n            <FormGroup controlId='countInStock'>\r\n              <Form.Label className='mt-2 mb-1'>countInStock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => {\r\n                  setCountInStock(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </FormGroup>\r\n\r\n            <FormGroup controlId='description'>\r\n              <Form.Label className='mt-2 mb-1'>Description</Form.Label>\r\n              <Form.Control\r\n                as='textarea'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </FormGroup>\r\n\r\n            <Button className='mt-3' type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Container, Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/message';\r\nimport Loader from '../components/loader';\r\nimport { orderActions_listOrders } from '../actions/orderActions';\r\n\r\nconst OrderListScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(orderActions_listOrders());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <Container style={{ padding: '1.2rem' }}>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL PRICE</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>₹{order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <LinkContainer to={`/order/${order._id}`}>\r\n                  <Button variant='light' className='btn-sm'>\r\n                    Details\r\n                  </Button>\r\n                </LinkContainer>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst AboutScreen = () => {\r\n  return (\r\n    <>\r\n      <Container className='hello' fluid>\r\n        <Row>\r\n          <Col>\r\n            <h1>About Me</h1>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AboutScreen;\r\n","import React from 'react';\n//Routing->ability to move b/w diff parts of web app when user clicks\n//an element\n// React Router is TP library used for routing in react apps\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\nimport AboutScreen from './screens/AboutScreen';\n\nfunction App() {\n  return (\n    <Router>\n      {/* include Header component */}\n      <Header />\n      <main>\n        <Container fluid>\n          {/* include Homescreen component loaded*/}\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userList' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productList'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderList' component={OrderListScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/about' component={AboutScreen} />\n\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n\n      {/* include Footer component */}\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}